name: CI

on:
  push:
    branches: ['**']      # kaÅ¼dy branch
    tags: ['v*']          # oraz tagi wersji vX.Y.Z
  pull_request:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (pinned)
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683   # v4.2.2

      - name: Setup Python (pinned + cache pip)
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.x
        with:
          python-version: '3.12'
          cache: pip
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt

      - name: Set build metadata
        run: |
          echo "APP_VERSION=${GITHUB_REF#refs/tags/}" >> "$GITHUB_ENV"
          echo "GIT_SHA=${GITHUB_SHA}" >> "$GITHUB_ENV"

      - name: Upgrade pip
        run: python -m pip install -U pip

      - name: Install deps
        run: pip install -r requirements.txt -r requirements-dev.txt

      - name: Lint
        run: |
          ruff check .
          ruff format --check

      - name: Tests
        run: pytest -q

  publish:
    if: startsWith(github.ref, 'refs/tags/v')   # tylko na tagi vX.Y.Z
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout (pinned)
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Set build metadata
        run: |
          echo "APP_VERSION=${GITHUB_REF#refs/tags/}" >> "$GITHUB_ENV"
          echo "GIT_SHA=${GITHUB_SHA}" >> "$GITHUB_ENV"

      - name: Login to GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" \
             | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

      - name: Build & push (GHCR)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/agentcortana-app:${{ env.APP_VERSION }}
            ghcr.io/${{ github.repository_owner }}/agentcortana-app:sha-${{ env.GIT_SHA }}

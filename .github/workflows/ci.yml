name: CI

on:
  push:
    branches: [main]
    tags: ['v*']
  pull_request:

permissions:
  contents: read
  packages: write   # ← konieczne dla GHCR
  id-token: write   # (opcjonalnie pod SBOM/provenance)

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.12' }
      - run: pip install -e . && pytest -q

  publish:
    # publikuj tylko na main i przy tagach wersji
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute tags
        id: tags
        run: |
          IMAGE=ghcr.io/${{ github.repository_owner }}/agentcortana-app
          echo "IMAGE=$IMAGE" >> $GITHUB_OUTPUT
          echo "SHA_TAG=$IMAGE:sha-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
          # tag latest tylko na main
          if [ "${GITHUB_REF}" = "refs/heads/main" ]; then echo "LATEST_TAG=$IMAGE:latest" >> $GITHUB_OUTPUT; fi
          # tag wersyjny tylko dla ref=tag
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then echo "SEMVER_TAG=$IMAGE:${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT; fi

      - name: Build & push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ steps.tags.outputs.SHA_TAG }}
            ${{ steps.tags.outputs.LATEST_TAG }}
            ${{ steps.tags.outputs.SEMVER_TAG }}


on:
  push:
    branches: ['**']
    tags: ['v*']
  pull_request:

permissions:
  contents: read
  packages: write

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (pinned)
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - name: Setup Python (pinned + cache pip)
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: '3.12'
          cache: pip
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
      - name: Set build metadata
        run: |
          echo "APP_VERSION=${GITHUB_REF#refs/tags/}" >> "$GITHUB_ENV"
          echo "GIT_SHA=${GITHUB_SHA}" >> "$GITHUB_ENV"
      - name: Upgrade pip
        run: python -m pip install -U pip
      - name: Install deps
        run: pip install -r requirements.txt -r requirements-dev.txt
      - name: Lint
        run: |
          ruff check .
          ruff format --check
      - name: Tests
        run: pytest -q

  publish:
    if: startsWith(github.ref, 'refs/tags/v')   # tylko dla tagów v*
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (pinned)
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Login to GHCR
        # logowanie do ghcr.io przy użyciu GITHUB_TOKEN
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push (GHCR)
        uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/agentcortana-app:${{ env.APP_VERSION }}
            ghcr.io/${{ github.repository_owner }}/agentcortana-app:sha-${{ github.sha }}

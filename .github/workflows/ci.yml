name: CI

on:
  push:
    branches: [ main ]       # CI na każdy push do main
    tags:     [ 'v*' ]       # oraz na tagi vX.Y.Z (włączy publish)
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  packages: write            # wymagane do pushowania do GHCR

# Anuluj stare runy dla tego samego refa
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true
  # doc: https://docs.github.com/actions/using-jobs/using-concurrency
  # (cancel-in-progress: true anuluje poprzednie runy w tej samej grupie)
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (pinned)
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Setup Python (pinned + cache pip)
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt

      - name: Set build metadata
        run: |
          echo "APP_VERSION=${GITHUB_REF#refs/tags/}" >> "$GITHUB_ENV"
          echo "GIT_SHA=${GITHUB_SHA}" >> "$GITHUB_ENV"
        # jak poprawnie dopisywać do $GITHUB_ENV: docs GitHub 

      - name: Upgrade pip
        run: python -m pip install -U pip

      - name: Install deps
        run: pip install -r requirements.txt -r requirements-dev.txt

      - name: Lint
        run: |
          ruff check .
          ruff format --check

      - name: Tests
        run: pytest -q

  publish:
    # publikuj tylko przy pushu taga v*
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout (pinned)
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Login to GHCR
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        # docker/login-action usage + ghcr.io: Marketplace :contentReference[oaicite:2]{index=2}

      - name: Compute tags
        id: meta
        run: |
          IMAGE="ghcr.io/${{ github.repository_owner }}/agentcortana-app"
          echo "image=$IMAGE"                          >> "$GITHUB_OUTPUT"
          echo "tags=$IMAGE:${GITHUB_REF_NAME},$IMAGE:sha-${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"
        # github.ref_name = krótsza nazwa taga/brancha (oficjalne docs) :contentReference[oaicite:3]{index=3}

      - name: Build & push (GHCR)
        uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75 # v6 pinned
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
        # build-push-action "tags:" (przykład i opis) – Marketplace README :contentReference[oaicite:4]{index=4}



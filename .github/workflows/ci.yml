name: CI

on:
  push:
    branches: [main]     # tylko main
    tags: ['v*']         # i wersje vX.Y.Z
  pull_request:
    branches: [main]

permissions:             # GITHUB_TOKEN uprawnienia dla workflow
  contents: read
  packages: write        # konieczne do pushowania do GHCR

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (pinned)
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - name: Setup Python (pinned + cache pip)
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
      - name: Upgrade pip
        run: python -m pip install -U pip
      - name: Install deps
        run: pip install -r requirements.txt -r requirements-dev.txt
      - name: Lint
        run: |
          ruff check .
          ruff format --check
      - name: Tests
        run: pytest -q

  publish:
    if: startsWith(github.ref, 'refs/tags/v')   # tylko na tagi v*
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (pinned)
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Login to GHCR
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567   # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute tags
        id: tags
        run: |
          IMAGE=ghcr.io/${{ github.repository_owner }}/agentcortana-app
          echo "sha=$IMAGE:sha-${GITHUB_SHA::7}"       >> $GITHUB_OUTPUT
          echo "semver=$IMAGE:${GITHUB_REF_NAME}"      >> $GITHUB_OUTPUT

      - name: Build & push (GHCR)
        uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75  # v6
        with:
          context: .
          push: true
          tags: |
            ${{ steps.tags.outputs.sha }}
            ${{ steps.tags.outputs.semver }}

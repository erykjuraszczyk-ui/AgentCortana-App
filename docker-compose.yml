
services:
  db:
    image: pgvector/pgvector:pg16
    container_name: agentcortana-db
    environment:
      POSTGRES_USER: ${DB_USER:-agent}
      POSTGRES_PASSWORD: ${DB_PASS:-agentpass}
      POSTGRES_DB: ${DB_NAME:-agentdb}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-agent} -d ${DB_NAME:-agentdb}"]
      interval: 5s
      timeout: 3s
      retries: 20

  minio:
    image: minio/minio:latest
    container_name: agentcortana-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY:-minio}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_KEY:-minio12345}
    ports:
      - "9000:9000"   # S3 API
      - "9001:9001"   # console
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:9000/minio/health/live"]
      interval: 5s
      timeout: 3s
      retries: 20

  # (opcjonalnie) aplikacja – włącz przez profil "app", jeśli masz Dockerfile
  app:
    profiles: ["app"]
    build:
      context: .
    env_file:
      - .env.local
    environment:
      DATABASE_URL: ${DATABASE_URL}
      S3_ENDPOINT_URL: ${S3_ENDPOINT_URL_INTERNAL:-http://minio:9000}
      S3_BUCKET: ${S3_BUCKET}
      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      S3_SECRET_KEY: ${S3_SECRET_KEY}
      S3_REGION: ${S3_REGION}
      OTEL_ENABLED: ${OTEL_ENABLED:-0}
      RATE_LIMIT: ${RATE_LIMIT:-60}
      RATE_LIMIT_WINDOW: ${RATE_LIMIT_WINDOW:-60}
      RATE_LIMIT_PATHS: ${RATE_LIMIT_PATHS:-/act}
      TRUST_PROXY: ${TRUST_PROXY:-0}
    ports:
      - "${APP_PORT:-8081}:8000"
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy

volumes:
  db_data:
  minio_data:
